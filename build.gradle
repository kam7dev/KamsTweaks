plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    //id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'kam'
version = '1.1.9'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
   // maven {
   //     name = "sonatype"
    //    url = "https://oss.sonatype.org/content/groups/public/"
    ////}
    //maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.6-R0.1-SNAPSHOT")
    //implementation 'com.github.eduardomcb:discord-webhook:1.0.0'
}

//tasks.named('shadowJar') {
 //   archiveClassifier.set('')
//}

//tasks.named('jar') {
 //   dependsOn tasks.named('shadowJar')
  //  enabled = false // optional: disables actual jar archive creation
//}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.21.6")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}
