# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle


on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build Type'
        required: true
        default: 'nightly'
        type: choice
        options:
          - release
          - nightly
  push:
    branches:
      - "**"
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 212
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Package
        path: build/libs
      

  nightly: 
    name: Create Nightly Release
    runs-on: ubuntu-latest
    if: github.event.inputs.build_type != 'release'
    needs: ['build']
    permissions:
      contents:
        write
        
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: './artifacts/'

      - name: Create Nightly Release
        uses: andelf/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
          name: 'Development Release'
          body: |
            Development release for commit ${{ github.sha }}
          files: |
            ./artifacts/Package/*.jar

  release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    if: github.event.inputs.build_type == 'release'
    needs: ['build']
    permissions:
      contents:
        write
        
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: './artifacts/'
      
      - name: Read mod version & mod id
        id: read_version
        run: |
          echo "MOD_VERSION=$(jq -r '.version' mod.json)" >> $GITHUB_ENV
      - name: Create Draft Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.MOD_VERSION }}
          name: ${{ env.MOD_VERSION }}
          body: |
            TODO before publishing:
             - mark if pre-release
             - add changelog
             - remove this
          draft: true
          files: |
            ./artifacts/Package/*.jar
